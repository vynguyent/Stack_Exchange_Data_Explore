load(file ='../stats.stackexchange.com/postdata.RData')
word_bag = c()
for (i in 1:length(postdata$Title)){
title = toString(postdata$Title[i])
title = str_replace_all(title, "\\?", "")
word_bag = c(word_bag, strsplit(title, " ")[[1 ]])
}
library(plyr)
library(stringr)
for (i in 1:length(postdata$Title)){
title = toString(postdata$Title[i])
title = str_replace_all(title, "\\?", "")
word_bag = c(word_bag, strsplit(title, " ")[[1 ]])
}
word_bag2 = names(sort(table(word_bag))[100:42600])   # You may change this!
rm(list=c("n"))
findMostSimiliar = function(text){
test_title = text %>% toString() %>% str_replace_all("\\?", "") %>% strsplit(" ")
test_vector = word_bag2 %in% test_title[[1]]
innerProduct = lapply(postdata$Title, function(x){
(word_bag2 %in% (x %>% toString() %>% str_replace_all("\\?", "") %>% strsplit(" "))[[1]] + 0) %*% test_vector
}) %>% unlist()
return(postdata[which(innerProduct==max(innerProduct)), ]$Title)
}
findMostSimiliar("How to use Fisher scoring to solve poisson regression without using the default glm function?")
getwd
getwd()
setwd('/Users/CDX/Stack_Exchange_Data_Explore/stats.stackexchange.com/')
load(file = 'postdata.RData')
