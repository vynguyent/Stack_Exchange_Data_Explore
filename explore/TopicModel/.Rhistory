summary(mock.fit)
mock.fit$n.event/mock.fit$n.risk
cumsum(mock.fit$n.event/mock.fit$n.risk)
z<-c(0.8,0.6,0.4,0.6,0.1,0.4,0.3,0.5)
idtr == 1
z<-c(0.8,0.6,0.4,0.6,0.1,0.4,0.3,0.5)
idtr <- c(1,0,1,1,0,0,1,1)
idtr == 1
which(idtr==1)
z[2:]
Ub <- funtion(b){
u <- c()
for(i in which(idtr==1)){
ui<-z[i] - (sum(z[i:length(z)]*exp(z[i:length(z)]*b)))/(sum(exp(z[i:length(z)]*b)))
u <-c(u,ui)
}
return(sum(u))
}
Ub <- function(b){
u <- c()
for(i in which(idtr==1)){
ui<-z[i] - (sum(z[i:length(z)]*exp(z[i:length(z)]*b)))/(sum(exp(z[i:length(z)]*b)))
u <-c(u,ui)
}
return(sum(u))
}
Ub(1)
Ub(0)
plot(-2:12, Ub(-2:13))
plot(-2:12, Ub(-2:12))
plot(-2:12, sapply(-2:12,FUN = Ub(x)))
q
lapply(-2:12,FUN = Ub(x))
lapply(-2:12,FUN = function(x){x+1})
sapply(-2:12,FUN = function(x){x+1})
sapply(-2:12,FUN = sin)
plot(-2:12, sapply(-2:12,FUN = Ub))
?optim
optim(0,fn = abs(Ub))
optim(0,fn = abs(Ub),method = 'Nelder-Mead')
optimize(0,fn = abs(Ub))
?optimize
optimize(f = abs(Ub))
optimize(f = abs(Ub),interval = c(-2,12))
Ub <- function(b){
u <- c()
for(i in which(idtr==1)){
ui<-z[i] - (sum(z[i:length(z)]*exp(z[i:length(z)]*b)))/(sum(exp(z[i:length(z)]*b)))
u <-c(u,ui)
}
return(abs(sum(u)))
}
optimize(f = Ub,interval = c(-2,12))
optimize(f = abs(Ub),interval = c(-2,12))
optimize(f = abs(Ub()),interval = c(-2,12))
ABSUB<- function(b){
abs(Ub(b))
}
optimize(f = ABSUB,interval = c(-2,12))
Ub_prime <- function(b){
u <- c()
for(i in which(idtr==1)){
ui<- - (sum(z[i:length(z)]^2*exp(z[i:length(z)]*b)) * sum(exp(z[i:length(z)]*b)) -
sum(z[i:length(z)]*exp(z[i:length(z)]*b))^2 )/(sum(exp(z[i:length(z)]*b)))^2
u <-c(u,ui)
}
return(sum(u))
}
Ub_prime(5.69)
library(tidyr)
q()
install.packages("gEcon")
install.packages("quantstrat")
install.packages("FinancialInstrument", repos="http://R-Forge.R-project.org")
install.packages("blotter", repos="http://R-Forge.R-project.org")
install.packages("quantstrat", repos="http://R-Forge.R-project.org")
install.packages("RTAQ", repos="http://R-Forge.R-project.org")
Show/Hide extra Info
qï¼ˆï¼‰
q()
a<-c(0,90,280,5,10,
0,85,270,0,0,
10,0,0,95,290)
a <- matrix(a,byrow = T,nrow = 3)
a
a %*% c(0.2,.3,.1,.3,.1)
a<-c(0,10,20,-10,-20,
0,15,30,-5,-10,
-10,100,300,-100,-300)
a <- matrix(a,byrow = T,nrow = 3)
a
a<-c(0,10,20,-10,-20,
0,15,30,-5,-10,
0,100,200,-100,-200,
-10,300,1000,-300,-1000)
a <- matrix(a,byrow = T,nrow = 4)
a %*% c(0.2,.3,.1,.3,.1)
a %*% c(0.1,.5,.3,.07,.03) #bulk market
a %*% c(0.1,.5,.3,.07,.03) #bulk market
a
apply(a, 1, min)
a
(apply(a, 1, min))
which.max(apply(a, 1, min))
apply(a, 2, max)
regret_a<-apply(a, 2, max)
apply(a, 1, function(x) regret_a - x)
a
t(apply(a, 1, function(x) regret_a - x))
regret<-t(apply(a, 1, function(x) regret_a - x))
which.min(apply(regret, 1, max))
(apply(regret, 1, max))
(apply(a, 1, min))
(apply(a, 1, min)) #max min payoff
(apply(regret, 1, max)) #
regret
regret %*% bulk
bulk <- c(0.1,.5,.3,.07,.03) #bulk market
regret %*% bulk
min(regret %*% bulk) # min mean regret
(regret %*% bulk) # min mean regret
(apply(a, 1, min)) #max min payoff
(apply(regret, 1, max)) #min max regret
(regret %*% bulk) # min mean regret
(apply(a, 1, min)) #max min payoff
a
a%*%bulk
bulk <- c(0.1,.5,.3,.07,.03) #bulk market
bear <- c(0.1,.07,.03,.5,.3) #bear market
calm <- c(0.5,0.2,0.05,0.2,0.05)
getwd()
rownames(a) <- c('index','alpha','leverage','structure')
colnames(a) <- c('keep','up','roarup','down','dropdown')
regret_a<-apply(a, 2, max)
regret<-t(apply(a, 1, function(x) regret_a - x))
regret
(regret<-t(apply(a, 1, function(x) regret_a - x)))
result<-data.frame(
maxmin=apply(a, 1, min),
minmaxReg=apply(regret, 1, max),
maxMean_bulk=a%*%bulk,
maxMean_bear=a%*%bear,
maxMean_calm=a%*%calm,
minMeanReg_bulk=regret%*%bulk,
minMeanReg_bear=regret%*%bear,
minMeanReg_calm=regret%*%calm
)
result
library(dplyr)
?summarise_each
summarise(result,list(max,min))
rownames(result)
[which.max(result$maxmin)
which.max(result$maxmin)
which.min(result$minMeanReg_calm)
c(which.max(result$maxmin),
which,min(result$minmaxReg),
which.max(result$maxMean_bulk),
which.max(result$maxMean_bear),
which.max(result$maxMean_calm),
which.min(result$minMeanReg_bulk),
which.min(result$minMeanReg_bear),
which.min(result$minMeanReg_calm))
which.max(result$maxmin)
c(which.max(result$maxmin),
which,min(result$minmaxReg)
)
r<-rbind(result,rownames(result)[c(which.max(result$maxmin),
which.min(result$minmaxReg),
which.max(result$maxMean_bulk),
which.max(result$maxMean_bear),
which.max(result$maxMean_calm),
which.min(result$minMeanReg_bulk),
which.min(result$minMeanReg_bear),
which.min(result$minMeanReg_calm))])
r
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(aes(x = displ, y = hwy, color = class, size = class))
ggplot(data = mpg) +
geom_point(aes(x = displ, y = hwy, color = class, size = class,alpha = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
library(tidyverse)
install.packages('tidyverse')
library(dplyr)
?row_number
x <- c(5, 1, 3, 2, 2, NA)
row_number(x)
near(sqrt(2) ^ 2,  2)
?merge
?inner_join
suppressMessages(library(quantmod))
suppressMessages(library(dplyr))
getSymbols('^SSEC',from = '2015-01-01')
last(SSEC)
first(SSEC)
tail(SSEC)
Delt(Vo(SSEC))
TAIL(Vo(SSEC))
tail(Vo(SSEC))
tail(Delt(Vo(SSEC)))
source('~/SSEC_DAILY.R', echo=TRUE)
tail(Delt(Vo(SSEC))*100)
options(digits = 3)
getSymbols('^SSEC',from = '2015-01-01')
tail(Delt(Vo(SSEC))*100)
SSEC %>% Cl() %>% tail()
SSEC %>% Vo() %>% tail()
merge(SSEC %>% Cl() %>% tail(),SSEC %>% Vo() %>% tail())
SSEC %>% Vo() %>% Delt() %>% `*`(100)
merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(100) %>% tail())
merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(100) %>% tail())
?merge
merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(100) %>% tail())
merge(SSEC %>% Vo() %>% tail(),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail())
merge(c,v)
c<-merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(100) %>% tail())
v<-merge(SSEC %>% Vo() %>% tail(),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail())
merge(c,v)
df <- data.frame(
x = c(3, 1, 5),
y = c(2, 4, 6),
label = c("a","b","c")
)
p <- ggplot(df, aes(x, y, label = label)) +
xlab(NULL) + ylab(NULL)
p + geom_point()+ labs(title="geom_point")+ theme(plot.title = element_text(size = rel(2)))
library(ggplot2)
##### 1. geoms  ###############
df <- data.frame(
x = c(3, 1, 5),
y = c(2, 4, 6),
label = c("a","b","c")
)
p <- ggplot(df, aes(x, y, label = label)) +
xlab(NULL) + ylab(NULL)
p + geom_point()+ labs(title="geom_point")+ theme(plot.title = element_text(size = rel(2)))
p + geom_bar(stat="identity") +
labs(title = "geom_bar(stat=\"identity\")") + theme(plot.title = element_text(size = rel(2)))
p + geom_line() + labs(title = "geom_line")+ theme(plot.title = element_text(size = rel(2)))
p + geom_area() + labs(title = "geom_area")+ theme(plot.title = element_text(size = rel(2)))
p + geom_path() + labs(title = "geom_path")+ theme(plot.title = element_text(size = rel(2)))
p + geom_text() + labs(title = "geom_text")+ theme(plot.title = element_text(size = rel(2)))
df <- data.frame(x = rnorm(2000), y = rnorm(2000))
norm <- ggplot(df, aes(x, y))
norm + geom_point()
norm + geom_point(shape = 1) # hollow glyphs
norm + geom_point(shape = ".") # Pixel sized
c
geom_line()
ggplot(data = c) +
geom_line()
c
c[,2]
ggplot(data = c[,2]) +
geom_line()
plot(c[,2])
lines(c(,2))
plot(c[,2])
plot(v[,2],add =T)
?line
?lines
t<-merge(c,v)
plot(t[,c(2,4)])
ts.plot(t[,c(2,4)])
ts.plot(t[,c(2,4)],type = 'b')
c<-merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(500) %>% tail())
v<-merge(SSEC %>% Vo() %>% tail(),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail())
t<-merge(c,v)
ts.plot(t[,c(2,4)],type = 'b')
ts.plot(t[,c(2,4)],type = 'b',lty=c(1,2))
days = 10
days = 10
c<-merge(SSEC %>% Cl() %>% tail(),
SSEC %>% Cl() %>% Delt() %>% `*`(500) %>% tail(days))
v<-merge(SSEC %>% Vo() %>% tail(),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail(days))
t<-merge(c,v)
ts.plot(t[,c(2,4)],type = 'b',lty=c(1,2))
c(2,4)
t[,c(2,4)]
ts.plot(as.ts(t[,c(2,4)]),type = 'b',lty=c(1,2))
t
tail(SSEC,10)
c
c<-merge(SSEC %>% Cl() %>% tail(days),
SSEC %>% Cl() %>% Delt() %>% `*`(500) %>% tail(days))
v<-merge(SSEC %>% Vo() %>% tail(days),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail(days))
t<-merge(c,v)
ts.plot(t[,c(2,4)],type = 'b',lty=c(1,2))
t
install.packages('Rmpfr')
library(Rmpfr)
d<-function(i){
decimal=mpfr(2,precBits=300) for (j in 1:i){
decimal=mpfr(2+1/decimal,precBits=300) }
root2_vec[[i]]=mpfr(1+1/decimal,precBits=300)
common
suppressMessages(library(quantmod))
suppressMessages(library(dplyr))
suppressMessages(library(ggplot2))
options(digits = 3)
getSymbols('^SSEC',from = '2015-01-01')
days = 10
c<-merge(SSEC %>% Cl() %>% tail(days),
SSEC %>% Cl() %>% Delt() %>% `*`(500) %>% tail(days))
v<-merge(SSEC %>% Vo() %>% tail(days),
SSEC %>% Vo() %>% Delt() %>% `*`(100) %>% tail(days))
t<-merge(c,v)
ts.plot(t[,c(2,4)],type = 'b',lty=c(1,2))
tail(SSEC)
qchisq(.95,1)
qchisq(.99,1)
qchisq(1,1)
qchisq(0.99999,1)
qchisq(.95,1)
qchisq(.95,1) * -2
q()
install.packages('ISLR')
library(ISLR)
boston
library(MASS)
fix(Boston)
Boston
names(Boston)
head(Boston)
x <- Boston[-1]
lapply(x, function(x) lm(Boston$crim ~ x))
lapply(x, function(x) lm(Boston$crim ~ x)$coefficients)
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
summary(m)})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
summary(m)$coefficients})
if(1+1 =2){}
if(1+1 =2){
if(1+1 ==2){}
if(1+1 ==2){
1
}
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
plot(resid(m))
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
summary(m)$coefficients
plot(resid(m))
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(summary(m)$coefficients)
plot(resid(m))
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(summary(m)$coefficients)
plot(m)
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(summary(m)$coefficients)
plot(Boston$crim ~ x)
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(names(x))
plot(Boston$crim ~ x)
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(names(x))
abline(m)
}
})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
if(summary(m)$coefficients[2,4] < 0.05){
print(names(x))
line(m)
}
})
m <- lm(Boston$crim ~ zn)
m <- lm(Boston$crim ~ zn, data = x)
m
abline()
abline(m)
abline(m)
m
lines(m)
line(m)
plot(m)
plot(m)
for(i in seq(dim(x)[2])){
m <- lm(Boston$crim ~ x[i])
if(summary(m)$coefficients[2,4] < 0.05){
plot(x[i],Boston$crim,xlab = names(x)[i])
}
}
dim(x)
x[2]
for(i in seq(dim(x)[2])){
m <- lm(Boston$crim ~ x[[i]])
if(summary(m)$coefficients[2,4] < 0.05){
plot(x[i],Boston$crim,xlab = names(x)[i])
}
}
for(i in seq(dim(x)[2])){
m <- lm(Boston$crim ~ x[[i]])
if(summary(m)$coefficients[2,4] < 0.05){
plot(x[[i]],Boston$crim,xlab = names(x)[i])
}
}
for(i in seq(dim(x)[2])){
m <- lm(Boston$crim ~ x[[i]])
if(summary(m)$coefficients[2,4] < 0.05){
print(summary(m))
plot(x[[i]],Boston$crim,xlab = names(x)[i])
}
}
lm(crim~.,data = Boston)
m<-lm(crim~.,data = Boston)
summary(m)
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
m})
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
m[2]})
m<-lm(Boston$crim ~ zn)
m<-lm(Boston$crim ~ zn,x)
m
m$coefficients
lapply(x, function(x) { m<-lm(Boston$crim ~ x)
m$coefficients[2]})
sapply(x, function(x) { m<-lm(Boston$crim ~ x)
m$coefficients[2]})
uni.coe<-sapply(x, function(x) { m<-lm(Boston$crim ~ x)
m$coefficients[2]})
m<-lm(crim~.,data = Boston)
m$coefficients
m$coefficients
uni.coe
m$coefficients[-1]
plot(uni.coe,m$coefficients[-1])
plot(uni.coe,m$coefficients[-1],ylab = full.coe)
plot(uni.coe,m$coefficients[-1],ylab = 'full.coe')
sapply(x, function(x) { m<-lm(Boston$crim ~ x + x^2+x^3,)
m$coefficients[2]})
sapply(x, function(x) { m<-lm(Boston$crim ~ x + x^2+x^3,)
summary(m)})
lapply(x, function(x) { m<-lm(Boston$crim ~ x + x^2+x^3,)
summary(m)})
lapply(x, function(x) { m<-lm(Boston$crim ~ x + x^2+x^3)
summary(m)})
lapply(x, function(x) { m<-lm(Boston$crim ~ poly(x,3))
summary(m)})
lapply(x, function(x) { m<-lm(Boston$crim ~ x + I(X^2) + I(X^3))
summary(m)})
q
lapply(x, function(x) { m<-lm(Boston$crim ~ x + I(x^2) + I(x^3))
summary(m)})
library(tidytext)
install.packages('tidynext')
install.packages('tidytext')
setwd('Stack_Exchange_Data_Explore/explore/TopicModel/')
load(file = 'postdata.RData')
postdata %>%
unlist(postdata$Title)
library(tidytext)
postdata %>%
unlist(postdata$Title)
library(dplyr)
postdata %>%
unlist(postdata$Title)
postdata$Title
unlist(postdata,postdata$Title)
?unlist
class(unlist(postdata,postdata$Title))
unlist(postdata,postdata$Title)[1:10]
?unnest_tokens
unnest_tokens(unlist(postdata$Title),word, Title)
unnest_tokens((postdata$Title),word, Title)
unnest_tokens(postdata$Title,word, Title)
dim(postdata)
unnest_tokens(data_frame(row=seq(dim(postdata)[1])),word, Title)
unnest_tokens(data_frame(row=seq(dim(postdata)[1]), text=postdata$Title),word, Title)
tbl = data_frame(row=seq(dim(postdata)[1]), text=postdata$Title)
head(tbl)
tbl = data_frame(row=seq(dim(postdata)[1]), text=postdata$Title)
unnest_tokens(tbl,word, text)
tbl = data_frame(text=postdata$Title)
unnest_tokens(tbl,word, text)
tbl = data_frame(text=postdata$Title)
unnest_tokens(tbl,word, text)
