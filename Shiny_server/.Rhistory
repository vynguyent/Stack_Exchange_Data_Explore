})
countstat$academia.stackexchange.com
tags[[1]]$academia.stackexchange.com[[1]][[1]]
tags[[1]]$academia.stackexchange.com[[1]][[2]]
tags[[1]]$academia.stackexchange.com[[4]][[2]]
names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange
});daterange <- as.list(daterange)
daterange <- as.list(daterange)
daterange
daterange <- as.vector(daterange)
date()
daterange
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- as.vector(daterange)
daterange
daterange$astronomy.stackexchange.com
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange$astronomy.stackexchange.com
as.list(daterange$astronomy.stackexchange.com)
as.vector(daterange$astronomy.stackexchange.com)
daterange <- sapply(daterange, function(x) unlist(x))
daterange$academia.stackexchange.com
unlist(daterange)
daterange <- unlist(daterange)
daterange
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
daterange
)
min(daterange)
which.min(daterange)
class(daterange)
as.Date(daterange,format = '%Y-%M')
dat<-as.Date(daterange,format = '%Y-%M')
dat[1]
daterange[1]
?as.POSIXct
dat<-as.Date(daterange,format = '%Y-%M'); daterange <- strptime(dat,format ='%Y-%M' )
daterange
daterange <- unlist(daterange)
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
dat<-as.Date(daterange,format = '%Y-%M'); daterange <- strftime(dat,format ='%Y-%M' )
daterange
dat[10000]
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
dat<-as.Date(daterange,format = '%Y-%M'); daterange <- strftime(dat,format ='%Y-%m' )
daterange
dat
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
daterange
daterange[1:100]
dat<-as.Date(daterange,format = '%Y-%m'); daterange <- strftime(dat,format ='%Y-%m' )
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
dat<-as.Date(daterange,format = '%Y-%m'); daterange <- strftime(dat,format ='%Y-%m' )
head(dat)
head(daterange)
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
daterange
daterange[1:100]
daterange[1:10]
as.Date(daterange,format = '%Y-%m')
daterange[1:10]
as.Date(daterange,format = '%Yy-%m')
as.Date(daterange,format = '%y-%m')
daterange[1:10]
?as.Date
as.Date(daterange,format = '%Y-%m')
daterange[1:10]
as.Date("2014-09", "%Y-%m")
as.Date("2014-09", "%y-%m")
as.Date("2014-09", "%Y-%b")
as.Date("2014-09", "%Y-%M")
as.Date("2014-09", "%Y-%m")
library(RJSONIO)
#a<-read.table(file = 'tags_count.json')
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
#save(obamacare,file="obamacare.RData")
#load("obamacare.RData")# The result list is saved
tags[[1]]$academia.stackexchange.com[[1]][[2]]
tags[[1]]$academia.stackexchange.com[[4]][[2]]
countstat<-lapply(tags[[1]], function(x) {
sapply(x, function(xx) list(name=xx[[1]],freq=sum(xx[[2]])) )
})
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- unlist(daterange)
daterange[1:4]
as.Date(daterange[1],format = '%Y-%m')
as.Date(daterange[1],format = '%Y-%m-%d')
as.Date(daterange[1],format = '%Y')
as.Date(daterange[1],format = '%Y-%m-%d')
as.Date(daterange[1],format = '%Y-%m-%d')
as.Date(daterange[1],format = '%F')
as.Date("01/05/1965",format = "%m/%d/%Y")
as.Date("05/1965",format = "%m/%Y")
as.Date("01/05/1965",format = "%m/%d/%Y")
as.Date("01/1965",format = "%m/%Y")
daterange
daterange <- paste(unlist(daterange),'-01',sep = '')
daterange
dat<-as.Date(daterange,format = '%Y-%m-%d')
head(dat)
range(dat)
sort(dat)
sort(dat)[1:8]
range(dat)
"2008-09" > "2008-010"
"2008-09" > "2008-10"
"2008-09" > "2007-10"
"2008-09" <'' "2007-10"
"2008-09" < "2007-10"
?lapply
lapply(1:4, function(x) x+a, a=10)
lapply(1:4, function(x,A) x+a, a=10)
lapply(1:4, function(x,a) x+a, a=10)
names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) list(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
constrOptim()
countstat
sort(countstat)
countstat2<-countstat[2,];names(countstat2) <- countstat[1,]
dim(countstat)
class(countstat)
unlist
unlist(countstat)
class(unlist(countstat))
dim(unlist(countstat))
as.data.frame(countstat)
countstat
countstat$academia.stackexchange.com
class(countstat$academia.stackexchange.com)
countstat$academia.stackexchange.com[2,]
countstat$academia.stackexchange.com
dim(countstat$academia.stackexchange.com)
countstat$academia.stackexchange.com[2,1]
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
countstat$academia.stackexchange.com
countstat$academia.stackexchange.com[1,2]
countstat$academia.stackexchange.com[2,1]
unlist
unlist(countstat)
unlist(countstat)[1:2]
unlist(countstat)[1:10]
countstat$academia.stackexchange.com[1:10]
length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(24100/2))-1]
tags[1:5]
tags <- unlist(countstat)[2*(seq(24100/2))-1]; count <- unlist(countstat)[2*seq(24100/2)]
count[1:5]
tags <- unlist(countstat)[2*(seq(24100/2))-1]; count <- as.integer(unlist(countstat)[2*seq(24100/2)])
count
countstat<-data.frame(tags= tags,count=count)
head(countstat)
tail(countstat)
countstat<-data.frame(tags= tags,count=count);sort(countstat)
countstat<-data.frame(tags= tags,count=count)
countstat<-data.frame(tags= as.factor(tags),count=count)
head(countstat)
library(plotly)
install.packages('plotly')
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
# note how size is automatically scaled and added as hover text
plot_ly(d, x = carat, y = price, size = carat, mode = "markers")
require(wordcloud)
png("wordcloud.png",width = 1000,height = 1000)
require(wordcloud)
op = par(bg = "lightyellow")
colors=brewer.pal(8,"Dark2")
wordcloud(countstat$tags, countstat$count, max.words=100,
scale=c(10,3),min.freq=-Inf,
colors=colors,random.order=F,random.color=F,ordered.colors=F,
main='Pop tags')
par(op)
dev.off()
countstat
countstat[,countstat$count>300]
countstat[countstat$count>300,]
countstat[countstat$count>100,]
countstat[countstat$count>1000,]
countstat[countstat$count>2000,]
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sort(1:5)
max(countstat$count)
sort(countstat$count)
sort(countstat$count,decreasing = F)
sort(countstat$count,decreasing = T)
sort(countstat$count,decreasing = T)[1:5]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
#tags[[1]]$academia.stackexchange.com[[1]][[2]]
#names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
daterange <- lapply(tags[[1]], function(x) {
sapply(x, function(xx) names(xx[[2]]))
})
daterange <- paste(unlist(daterange),'-01',sep = '')
dat<-as.Date(daterange,format = '%Y-%m-%d')
#range(dat)#"2008-09-01" "2016-09-01"
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
runApp()
runApp()
`
runApp()
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = "2016-05-01", end='2016-09-01')
tags <- unlist(countstat)[2*(seq(24100/2))-1]; count <- as.integer(unlist(countstat)[2*seq(24100/2)])
countstat<-data.frame(tags= as.factor(tags),count=count)
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= as.factor(tags),count=count)
require(wordcloud)
op = par(bg = "lightyellow")
colors=brewer.pal(8,"Dark2")
wordcloud(countstat$tags, countstat$count, max.words=100,
scale=c(10,3),min.freq=-Inf,
colors=colors,random.order=F,random.color=F,ordered.colors=F,
main='Pop tags')
par(op)
wordcloud(countstat$tags, countstat$count, max.words=100,
scale=c(10,3),min.freq=-Inf,
colors=colors,random.order=F,random.color=F,ordered.colors=F,
main='Pop tags')
countstat
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = "2016-05-01", end='2016-09-01')
dat[1:4]
names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
#tags[[1]]$academia.stackexchange.com[[1]][[2]]
#names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
names(tags[[1]]$academia.stackexchange.com[[4]][[2]]) > '2016-09-01'
names(tags[[1]]$academia.stackexchange.com[[4]][[2]]) < '2016-09-01'
names(tags[[1]]$academia.stackexchange.com[[4]][[2]]) < '2016-01-01'
runApp()
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
countstat
tags <- unlist(countstat)[2*(seq(24100/2))-1]; count <- as.integer(unlist(countstat)[2*seq(24100/2)])
countstat<-data.frame(tags= as.factor(tags),count=count)
countstat
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
#tags[[1]]$academia.stackexchange.com[[1]][[2]]
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= tags,count=count)
head(countstat)
runApp()
runApp()
?observe
runApp()
runApp()
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tags[[i]]<-fromJSON(temp)
}
close(con)
#tags[[1]]$academia.stackexchange.com[[1]][[2]]
#names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
# daterange <- lapply(tags[[1]], function(x) {
#   sapply(x, function(xx) names(xx[[2]]))
# })
# daterange <- paste(unlist(daterange),'-01',sep = '')
# dat<-as.Date(daterange,format = '%Y-%m-%d')
# #range(dat)#"2008-09-01" "2016-09-01"
countstat<-lapply(tags[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= tags,count=count)
head(countstat)
names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
tags[[1]]
tags
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tag[[i]]<-fromJSON(temp)
}
close(con)
#tags[[1]]$academia.stackexchange.com[[1]][[2]]
#names(tags[[1]]$academia.stackexchange.com[[4]][[2]])
# daterange <- lapply(tags[[1]], function(x) {
#   sapply(x, function(xx) names(xx[[2]]))
# })
# daterange <- paste(unlist(daterange),'-01',sep = '')
# dat<-as.Date(daterange,format = '%Y-%m-%d')
# #range(dat)#"2008-09-01" "2016-09-01"
countstat<-lapply(tag[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= tags,count=count)
head(countstat)
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tags<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tag[[i]]<-fromJSON(temp)
}
close(con)
library(RJSONIO)
con <- file("tags_count.json",open = "r")
tag<-vector("list")
i=0
while(T){
i<-i+1
temp<-readLines(con,1)
if(length(temp)==0){
print("reach the end")
break
} else temp<-sub('.*\\t', '',temp, perl = TRUE)#get rid of the series ahead of json format
tag[[i]]<-fromJSON(temp)
}
close(con)
countstat<-lapply(tag[[1]], function(x,start,end) {
sapply(x, function(xx) c(name=xx[[1]]
,freq=sum(xx[[2]][names(xx[[2]])<=end & names(xx[[2]])>=start]))
)
}, start = '2011-09', end='2016-01')
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= tags,count=count)
head(countstat)
countstat<-lapply(tag[[1]], function(x,start,end) {
sapply(x, function(xx) {
tm <- paste(names(xx[[2]]),'-01',sep = '')
c(name=xx[[1]],freq=sum(xx[[2]][tm<=end & tm>=start]))}
)
}, start = '2011-09', end='2016-01')
len <- length(unlist(countstat))
tags <- unlist(countstat)[2*(seq(len/2))-1]
count <- as.integer(unlist(countstat)[2*seq(len/2)])
countstat<-data.frame(tags= tags,count=count)
head(countstat)
runApp()
library(rsconnect)
setwd("/Users/CDX/R_workspace/Stack_Shiny/")
rsconnect::setAccountInfo(name='ding', token='48CD5247CA4348EE301101517285A152'
, secret='laBhGpWiW2RPKAiCGOLb3zMNfDY/K3LGMpbB267H')
rsconnect::deployApp(account = 'ding',appName = 'Stack_Explore')
